include ../shared/two-column-article.pug
include ../shared/youtube-video.pug

mixin textContent(data, layoutContentType)
    -
        let isTextValid = true;
        if (!data.text) {
           isTextValid = false;
        } else {
            if (Array.isArray(data.text) && data.text.length === 0) {
                isTextValid = false;
            }
        }
        let isListValid = true
        if (!data.list || data.list.length === 0) {
           isListValid = false;
        }

    if isTextValid || isListValid
        +setContent(layoutContentType)
            if isTextValid
                if Array.isArray(data.text)
                    each text, index in data.text
                        span.text.big.paragraph=text
                else
                    span.text.big.paragraph=data.text
            if isListValid
                ul
                    each text, index in data.list
                        li.text.big=text
            if data.link
                a.text.big.link(href=data.link, rel="noopener nofollow", target="_blank")
                    if (data.linkText)
                        span=data.linkText
                    else
                        span Watch YouTube video
                    include ../../images/icons/forward-arrow-icon.svg

mixin imageContent(data, layoutContentType)
    if data.image
        +setContent(layoutContentType)
            img(src=data.image)

mixin videoContent(data, layoutContentType)
    if data.video
        +setContent(layoutContentType)
            +youtubeVideo(data.video)

mixin content(data, type, layoutContentType)
    case type
        when 'image'
            +imageContent(data, layoutContentType)
        when 'text'
            +textContent(data, layoutContentType)
        when 'video'
            +videoContent(data, layoutContentType)

mixin dataContentArticle(data, index, rootId)
    -const isEven = index % 2 === 0
    -const containerClass = data.background || (isEven ? 'primary-background-content' : '')
    -
        const getContentType = (notText) => {
            let result = 'text';
            if (notText) {
                if (data.image) {
                    result = 'image';
                } else if (data.video) {
                    result = 'video';
                }
            }
            return result;
        }
        const leftContentType = getContentType(isEven);
        let rightContentType = getContentType(!isEven);

        if (leftContentType === rightContentType) {
            rightContentType = undefined;
        }
    -
        let isTitleValid = true;
        if (!data.title) {
           isTitleValid = false;
        } else {
            if (Array.isArray(data.title) && data.title.length === 0) {
                isTitleValid = false;
            }
        }

    -const secodaryLeftClass = leftContentType === 'image' ? 'image-container' : undefined;
    -const secodaryRightClass = rightContentType === 'image' ? 'image-container' : undefined

    +twoColumnArticle({ container: containerClass, secondaryLeft: secodaryLeftClass, secondaryRight: secodaryRightClass })
        if rootId
            .dev-id #{rootId}-article-#{index}
        if isTitleValid
            +setContent('main')
                if Array.isArray(data.title)
                    each title, index in data.title
                        span.text.big=title
                else
                    span.text.big=data.title
        +content(data, leftContentType, 'secondaryLeft')
        +content(data, rightContentType, 'secondaryRight')
